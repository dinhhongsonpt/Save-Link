package savelink;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.awt.DesktopBrowse;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dinh son
 */
public class SaveLinkFrame extends javax.swing.JFrame {

    public ListLink listLink = new ListLink();

    /**
     * Creates new form SaveLinkFrame
     */
    public SaveLinkFrame() {
        initComponents();
        setResizable(false);
        File file = new File("Data.dat");
        if (file.isFile()) {
            listLink = (ListLink) MyProcessFile.openData("Data.dat");
        } else {
            MyProcessFile.saveData(listLink, "Data.dat");
        }
        showTable();
    }

    public void showTable() {
        jtbListLink.setModel(new DefaultTableModel(null, new String[]{""}));
        for (Link link : listLink.getList()) {
            DefaultTableModel model = (DefaultTableModel) jtbListLink.getModel();
            model.addRow(new Object[]{link.getTitle()});
            jlbMessage.setText("There are " + String.valueOf(model.getRowCount()) + " Links in the table !");
        }
    }

    public void addList() {
        Link link = new Link(jtfLink.getText(), jtfTitle.getText());
        listLink.addLink(link);
        MyProcessFile.saveData(listLink, "Data.dat");
    }

    public void copyClipboard() {
        int i = jtbListLink.getSelectedRow();
        if (i >= 0) {
            StringSelection stringSelection = new StringSelection(listLink.getList().get(i).getLink());
            Toolkit toolkit = Toolkit.getDefaultToolkit();
            Clipboard clipboard = toolkit.getSystemClipboard();
            clipboard.setContents(stringSelection, null);
            //JOptionPane.showMessageDialog(rootPane, "Đã copy Link !","Complete",JOptionPane.INFORMATION_MESSAGE);
        } else {
            //JOptionPane.showMessageDialog(rootPane, "Chưa chọn Link !", "ERROR!", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void connectBrowser() throws IOException {
        int i = jtbListLink.getSelectedRow();
        if (i >= 0) {       
            try {
                Desktop desktop = Desktop.getDesktop();
                desktop.browse(new URI(listLink.getList().get(i).getLink()));
            } catch (URISyntaxException ex) {
                Logger.getLogger(SaveLinkFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Chưa chọn Link !", "ERROR!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbListLink = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfTitle = new javax.swing.JTextField();
        jtfLink = new javax.swing.JTextField();
        jbtAdd = new javax.swing.JButton();
        jbtCopy = new javax.swing.JButton();
        jbtDelete = new javax.swing.JButton();
        jlbMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Made by Đinh Sơn");
        setBackground(new java.awt.Color(255, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.red);

        jtbListLink.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jtbListLink.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jtbListLink.setForeground(new java.awt.Color(0, 0, 255));
        jtbListLink.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtbListLink.setToolTipText("");
        jtbListLink.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbListLink.setName(""); // NOI18N
        jtbListLink.setRowHeight(30);
        jtbListLink.setSelectionForeground(new java.awt.Color(204, 0, 51));
        jtbListLink.setShowHorizontalLines(false);
        jtbListLink.setUpdateSelectionOnSort(false);
        jtbListLink.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(jtbListLink);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(139, 0, 0));
        jLabel1.setText("Title");

        jLabel2.setBackground(new java.awt.Color(255, 51, 51));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(139, 0, 0));
        jLabel2.setText("Link");

        jtfTitle.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jtfTitle.setForeground(new java.awt.Color(255, 0, 51));

        jtfLink.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jtfLink.setForeground(new java.awt.Color(255, 0, 51));

        jbtAdd.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jbtAdd.setForeground(new java.awt.Color(139, 0, 0));
        jbtAdd.setText("Add");
        jbtAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtAddMouseClicked(evt);
            }
        });
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jbtCopy.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jbtCopy.setForeground(new java.awt.Color(139, 0, 0));
        jbtCopy.setText("Connect");
        jbtCopy.setToolTipText("Connect to Default Browser");
        jbtCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCopyActionPerformed(evt);
            }
        });

        jbtDelete.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jbtDelete.setForeground(new java.awt.Color(139, 0, 0));
        jbtDelete.setText("Delete");
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });

        jlbMessage.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jlbMessage.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jtfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jtfLink, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtCopy)
                                .addGap(48, 48, 48)
                                .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbtAdd, jbtCopy, jbtDelete});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtfLink, jtfTitle});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfLink, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtAdd)
                    .addComponent(jbtCopy)
                    .addComponent(jbtDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jtfLink, jtfTitle});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbtAdd, jbtCopy, jbtDelete});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        // TODO add your handling code here:
        if (!jtfLink.getText().isEmpty() && !jtfTitle.getText().isEmpty()) {
            addList();
            showTable();
            jtfLink.setText("");
            jtfTitle.setText("");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Điền đầy đủ thông tin vào !", "ERROR!", JOptionPane.QUESTION_MESSAGE);
        }

    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCopyActionPerformed
        // TODO add your handling code here:
        copyClipboard();
        try {
            connectBrowser();
        } catch (IOException ex) {
            Logger.getLogger(SaveLinkFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtCopyActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        // TODO add your handling code here:
        int i = jtbListLink.getSelectedRow();
        if (i >= 0) {
            int dialogResult = JOptionPane.showConfirmDialog(rootPane, "Chắc không !", "Warning !", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            if (dialogResult == JOptionPane.YES_OPTION) {
                listLink.getList().remove(i);
                MyProcessFile.saveData(listLink, "Data.dat");
                showTable();
                JOptionPane.showMessageDialog(null, "Đã xóa !", "Complete", JOptionPane.INFORMATION_MESSAGE);
            }
            //listLink.getList().remove(i);
            // MyProcessFile.saveData(listLink, "Data.dat");
            // showTable();
            // JOptionPane.showMessageDialog(rootPane, "Đã xóa !", "Complete", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Chưa chọn Link !", "ERROR!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtDeleteActionPerformed

    private void jbtAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtAddMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jbtAddMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtCopy;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JLabel jlbMessage;
    private javax.swing.JTable jtbListLink;
    private javax.swing.JTextField jtfLink;
    private javax.swing.JTextField jtfTitle;
    // End of variables declaration//GEN-END:variables
}
